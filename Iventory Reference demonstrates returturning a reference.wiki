{{{cpp
// Inventory Reference
// Demonstrates returning a reference

#include <iostream>
#include <string>
#include <vector>

using std::string;
using std::vector;
using std::cout;
using std::endl;

// returns a reference to a string object, not a string object itself..
// function header
// & should be next to (&)refToElement not next to the return type
// & only needs to be added during the declaration and definition not function call
string& refToElement(vector<string>& inventory, int i);

int main()
{
	vector<string>inventory;
	inventory.push_back("sword");
	inventory.push_back("armor");
	inventory.push_back("shield");

	// displays string that the returned reference refers to 
	cout << "Sending the returned reference to cout.\n";
	cout << refToElement(inventory, 0) << "\n\n";

	// assings one reference to another --inexpensive assignement
	cout << "Assinging the returned reference to another reference.\n";
	string& rStr = refToElement(inventory, 1);
	cout << "Sending the new reference to cout:\n";
	cout << rStr << "\n\n";

	//copies a string object -- expensive assignment
	cout << "Assigning the returned reference to a string object.\n";
	// str is a string object not a reference! so inventory ,2 is copied
	string str = refToElement(inventory, 2);
	cout << "Sending the new string object to cout:\n";
	cout << str << "\n\n";

	//  altering the string object through a returned reference
	cout << "Aletering an object through a returned reference.\n";
	rStr = "Healing Potion";
	cout << "Sending the altered object to cout:\n";
	cout << inventory[1] << endl;

	return 0;
}

// returns a reference to a string
// header and return type determine whether a function return an object or a reference to an object
string& refToElement(vector<string>& vec, int i)
{
	return vec[i];
}
